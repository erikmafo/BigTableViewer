name: "Build"

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags:
      - v*

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest', 'ubuntu-latest', 'macos-latest']
        include:
        - os: windows-latest
          display-name: 'windows'
          java-opts: "-Djava.awt.headless=true -Dtestfx.robot=glass -Dtestfx.headless=true -Dprism.order=sw -Dprism.text=t2k -Dheadless.geometry=1280x800"
          installer-name: 'btviewer.msi'
        - os: ubuntu-latest
          display-name: 'linux'
          java-opts: "-Djava.awt.headless=true -Dtestfx.robot=glass -Dtestfx.headless=true -Dprism.order=sw -Dprism.text=t2k"
          installer-name: 'btviewer.deb'
        - os: macos-latest
          display-name: 'osx'
          java-opts: "-Djava.awt.headless=true -Dtestfx.robot=glass -Dtestfx.headless=true -Dprism.order=sw -Dprism.verbose=true"
          installer-name: 'btviewer.dmg'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Java JDK
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Install with maven
        env:
          JAVA_TOOL_OPTIONS: ${{ matrix.java-opts }}
          MAVEN_OPTS: ""
        run: mvn install -B -e -q
      - name: Show current dir
        run: ls target/release
      - name: Save artifact
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.installer-name }}
          path: target/release/*
  release:
    if: contains(github.ref, 'tags/v')
    needs: [build]
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
  upload:
    needs: [release]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        extension: [msi, deb, dmg]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: btviewer.${{ matrix.extension }}
          path: ./
      - name: Display downloaded files
        run: ls -R
      - name: Get asset name
        run: |
          ASSET_PATH=$(ls *.${{ matrix.extension }} | head -n 1)
          ASSET_NAME=$(basename $ASSET_PATH)
          echo "ASSET_NAME=${ASSET_NAME}" >> $GITHUB_ENV
          echo "ASSET_PATH=${ASSET_PATH}" >> $GITHUB_ENV
      - name: Upload btviewer.${{ matrix.extension }}
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ${{ env.ASSET_PATH }}
          asset_name: ${{ env.ASSET_NAME }}
          asset_content_type: application/octet-stream
